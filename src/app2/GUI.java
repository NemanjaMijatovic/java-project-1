/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app2;

import com.sun.jdi.connect.spi.Connection;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.Vector;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nemanja
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    
    public GUI() {
        initComponents();
        this.lista.prikaziUTabeli(tabela);
        this.lista.ucitajPodatkeIzBaze((DefaultTableModel) tabela.getModel());
      getContentPane().setBackground(new Color(174, 195, 209));
        try {
            // Load the image from the specified file path
            Image icon = ImageIO.read(new File("C:\\Users\\Nemanja\\Documents\\NetBeansProjects\\App2_1\\security2.jpg"));
            
            // Resize the image to the desired dimensions (e.g., 64x64)
            Image scaledIcon = icon.getScaledInstance(1000, 1000, Image.SCALE_SMOOTH);
            
            // Set the scaled icon image for the frame
            setIconImage(scaledIcon);
        } catch (IOException e) {
            // Handle the exception if the image file is not found
            e.printStackTrace();
        }
    }
    public GUI(String message) {
        initComponents();
        nameLbl.setText("Dobrodosli " + message.toUpperCase());
        this.lista.prikaziUTabeli(tabela);
        this.lista.ucitajPodatkeIzBaze((DefaultTableModel) tabela.getModel());
        getContentPane().setBackground(new Color(174, 195, 209));
        
         try {
            // Load the image from the specified file path
            Image icon = ImageIO.read(new File("C:\\Users\\Nemanja\\Documents\\NetBeansProjects\\App2_1\\security2.jpg"));
            
            // Resize the image to the desired dimensions (e.g., 64x64)
            Image scaledIcon = icon.getScaledInstance(1000, 1000, Image.SCALE_SMOOTH);
            
            // Set the scaled icon image for the frame
            setIconImage(scaledIcon);
        } catch (IOException e) {
            // Handle the exception if the image file is not found
            e.printStackTrace();
        }
    }
    Lista lista = new Lista();

  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        imeTF = new javax.swing.JTextField();
        idTF = new javax.swing.JTextField();
        prezimeTF = new javax.swing.JTextField();
        zapocniRadBtn = new javax.swing.JButton();
        izmeniBtn = new javax.swing.JButton();
        obrisiBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        izlogujBtn = new javax.swing.JButton();
        zavrsiSaRadom = new javax.swing.JButton();
        slikaLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Security - Kontrola dezurstava");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 102, 102));
        setResizable(false);

        nameLbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        nameLbl.setForeground(new java.awt.Color(0, 0, 0));
        nameLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Ime");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Prezime");

        zapocniRadBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        zapocniRadBtn.setText("Zapocni rad");
        zapocniRadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zapocniRadBtnActionPerformed(evt);
            }
        });

        izmeniBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        izmeniBtn.setText("Izmeni podatke");
        izmeniBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izmeniBtnActionPerformed(evt);
            }
        });

        obrisiBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        obrisiBtn.setText("Obrisi");
        obrisiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obrisiBtnActionPerformed(evt);
            }
        });

        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        izlogujBtn.setBackground(new java.awt.Color(153, 0, 0));
        izlogujBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        izlogujBtn.setForeground(new java.awt.Color(255, 255, 255));
        izlogujBtn.setText("Izloguj se");
        izlogujBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izlogujBtnActionPerformed(evt);
            }
        });

        zavrsiSaRadom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        zavrsiSaRadom.setText("Zavrsi sa radom");
        zavrsiSaRadom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zavrsiSaRadomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(slikaLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(zavrsiSaRadom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(idTF, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                        .addComponent(imeTF)
                                        .addComponent(prezimeTF))
                                    .addComponent(zapocniRadBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(izlogujBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(obrisiBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(izmeniBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(slikaLbl)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(imeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prezimeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(zapocniRadBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(zavrsiSaRadom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(izmeniBtn)
                        .addGap(67, 67, 67)
                        .addComponent(obrisiBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(izlogujBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zapocniRadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zapocniRadBtnActionPerformed
   String ime = this.imeTF.getText();
    String prezime = this.prezimeTF.getText();
    String id = this.idTF.getText();
    
    if (!isValidInput(ime, prezime, id)) {
        return;
    }
    
    // Dobij trenutno vreme
    LocalDateTime now = LocalDateTime.now();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
    String pocetakRada = formatter.format(now);

    // Dodavanje zaposlenog u tabelu
    DefaultTableModel model = (DefaultTableModel) tabela.getModel();
    model.addRow(new Object[]{ime, prezime, id, pocetakRada, }); // Prazan string za vreme završetka rada
    
    // Clear input fields
   this.lista.sacuvajPodatkeUBazi(ime, prezime, id, pocetakRada, null); // Prazan string za vreme završetka rada
    
    // Osvježi tabelu
    lista.ucitajPodatkeIzBaze((DefaultTableModel) tabela.getModel());
    
    // Clear input fields
    this.lista.ocistiInpute(imeTF, prezimeTF, idTF);
    }//GEN-LAST:event_zapocniRadBtnActionPerformed

    private void izmeniBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izmeniBtnActionPerformed
        this.lista.azurirajPodatkeUBazi2(imeTF, prezimeTF, idTF);
        this.lista.ocistiInpute(imeTF, prezimeTF, idTF);
        this.lista.ucitajPodatkeIzBaze((DefaultTableModel) tabela.getModel());
    }//GEN-LAST:event_izmeniBtnActionPerformed

    private void obrisiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obrisiBtnActionPerformed
       int selectedRow = tabela.getSelectedRow();
    if (selectedRow != -1) { // Provjera da li je odabran red
        lista.obrisiPodatkeIzBaze(selectedRow); // Poziv metode za brisanje sa rednim brojem odabranog reda
        lista.ucitajPodatkeIzBaze((DefaultTableModel) tabela.getModel()); // Osvježi tabelu nakon brisanja
    }
        this.lista.ocistiInpute(imeTF, prezimeTF, idTF);
        this.lista.ucitajPodatkeIzBaze((DefaultTableModel) tabela.getModel());
    }//GEN-LAST:event_obrisiBtnActionPerformed

    private void izlogujBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izlogujBtnActionPerformed
        
        LoginGui login = new LoginGui();
        login.show();
        dispose();
    }//GEN-LAST:event_izlogujBtnActionPerformed

    private void zavrsiSaRadomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zavrsiSaRadomActionPerformed
  LocalDateTime now = LocalDateTime.now();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
    String zavrsetakRada = formatter.format(now);

    // Postavi vrijeme završetka rada u odgovarajuće polje
    int selectedRow = tabela.getSelectedRow();
    if (selectedRow != -1) { // Provera da li je odabran red
        tabela.setValueAt(zavrsetakRada, selectedRow, 4); // Postavi vrijeme završetka rada u tabelu
    }

    // Ažuriraj bazu podataka
    String ime = imeTF.getText();
    String prezime = prezimeTF.getText();
    String id = idTF.getText();
    if (!ime.isEmpty() && !prezime.isEmpty() && !id.isEmpty()) {
        lista.azurirajPodatkeUBaziZavrsetakRada(id, zavrsetakRada);
    }
        this.lista.ucitajPodatkeIzBaze((DefaultTableModel) tabela.getModel());
    }//GEN-LAST:event_zavrsiSaRadomActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        this.lista.prikaziPodatkeUTextField(tabela, imeTF, prezimeTF, idTF);
    }//GEN-LAST:event_tabelaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    private boolean isValidInput(String ime, String prezime, String id) {
    // Provjera da li su sva polja popunjena
    if (ime.isEmpty() || prezime.isEmpty() || id.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Morate popuniti sva polja.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    // Provjera minimalne dužine imena (barem 3 karaktera)
    if (ime.length() < 3) {
        JOptionPane.showMessageDialog(this, "Ime mora imati barem 3 karaktera.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    // Provjera minimalne dužine prezimena (barem 4 karaktera)
    if (prezime.length() < 4) {
        JOptionPane.showMessageDialog(this, "Prezime mora imati barem 4 karaktera.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    // Provjera da li ime sadrži samo slova
    if (!ime.matches("[a-zA-Z]+")) {
        JOptionPane.showMessageDialog(this, "Ime može sadržavati samo slova.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    // Provjera da li prezime sadrži samo slova
    if (!prezime.matches("[a-zA-Z]+")) {
        JOptionPane.showMessageDialog(this, "Prezime može sadržavati samo slova.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    // Provjera formata imena
    if (!Character.isUpperCase(ime.charAt(0))) {
        JOptionPane.showMessageDialog(this, "Ime mora početi velikim slovom.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    // Provjera formata prezimena
    if (!Character.isUpperCase(prezime.charAt(0))) {
        JOptionPane.showMessageDialog(this, "Prezime mora početi velikim slovom.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    // Provjera formata ID-a
    if (id.length() != 5 || !Character.isUpperCase(id.charAt(0)) || !Character.isUpperCase(id.charAt(1)) || id.charAt(2) != '-' || !Character.isDigit(id.charAt(3)) || !Character.isDigit(id.charAt(4))) {
        JOptionPane.showMessageDialog(this, "ID mora biti u formatu AA-##.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    // Provjera da li prvo slovo ID-a odgovara početnom velikom slovu imena
    if (id.charAt(0) != ime.charAt(0)) {
        JOptionPane.showMessageDialog(this, "Prvo slovo ID-a mora odgovarati početnom velikom slovu imena.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    // Provjera da li drugo slovo ID-a odgovara početnom velikom slovu prezimena
    if (id.charAt(1) != prezime.charAt(0)) {
        JOptionPane.showMessageDialog(this, "Drugo slovo ID-a mora odgovarati početnom velikom slovu prezimena.", "Greška", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    return true;
}

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idTF;
    private javax.swing.JTextField imeTF;
    private javax.swing.JButton izlogujBtn;
    private javax.swing.JButton izmeniBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JButton obrisiBtn;
    private javax.swing.JTextField prezimeTF;
    private javax.swing.JLabel slikaLbl;
    private javax.swing.JTable tabela;
    private javax.swing.JButton zapocniRadBtn;
    private javax.swing.JButton zavrsiSaRadom;
    // End of variables declaration//GEN-END:variables
}
